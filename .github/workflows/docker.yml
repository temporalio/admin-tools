name: Build Docker Images

permissions:
  contents: read
  security-events: write

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    branches:
      - main

jobs:
  build-push-images:
    runs-on: ubuntu-latest-16-cores
    # Usually, a successful job takes ~17 mins.
    # Anything more than 30 mins is a sign that job is stuck.
    # This is a workaround until we find the root cause.
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: "true"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: ${{ !env.ACT }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare build args
        id: build_args
        run: |
          github_sha_short=${GITHUB_SHA:0:7}
          echo "IMAGE_TAG=sha-${github_sha_short}" >> $GITHUB_ENV
          TEMPORAL_SHA=$(git submodule status -- temporal | awk '{print $1}')
          echo "TEMPORAL_SHA=${TEMPORAL_SHA}" >> $GITHUB_ENV
          TCTL_SHA=$(git submodule status -- tctl | awk '{print $1}')
          echo "TCTL_SHA=${TCTL_SHA}" >> $GITHUB_ENV

      - name: Bake images
        uses: docker/bake-action@v4
        with:
          pull: true
          push: ${{ github.event_name == 'push' && !env.ACT }}
          load: true

      # TODO: can we loop this somehow?
      - name: Run Trivy vulnerability scanner on Server image
        uses: ./.github/actions/trivy
        with:
          image-tags: temporaliotest/server:${{ env.IMAGE_TAG }}
          image-name: server

      - name: Run Trivy vulnerability scanner on Admin Tools image
        if: steps.build_args.outputs.push == 'true'
        uses: ./.github/actions/trivy
        with:
          image-tags: temporaliotest/admin-tools:${{ env.IMAGE_TAG }}
          image-name: admin-tools

      - name: Run Trivy vulnerability scanner on Auto Setup image
        if: steps.build_args.outputs.push == 'true'
        uses: ./.github/actions/trivy
        with:
          image-tags: temporaliotest/auto-setup:${{ env.IMAGE_TAG }}
          image-name: auto-setup
