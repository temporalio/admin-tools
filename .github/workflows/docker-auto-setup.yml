name: Publish Temporal server with auto-setup image

on:
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  publish_to_docker_hub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: "true"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta for Commit image
        id: meta_commit
        uses: docker/metadata-action@v3
        if: github.event_name == 'push'
        with:
          images: temporaliotest/auto-setup
          tags: |
            type=sha,format=short,event=branch
            # latest

      - name: Push Commit image to DockerHub
        uses: docker/build-push-action@v2
        if: github.event_name == 'push'
        with:
          push: true
          file: auto-setup.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta_commit.outputs.tags }}
          labels: ${{ steps.meta_commit.outputs.labels }}
          build-args: |
            GITHUB_SHA_SHORT=${{ $(echo $GITHUB_SHA | cut -c 1-8) }}

      - name: Docker meta for Release image
        id: meta_release
        uses: docker/metadata-action@v3
        if: github.event_name == 'release'
        with:
          images: temporalio/auto-setup
          tags: |
            type=semver,pattern={{version}}
            # latest

      - name: Push Release image to DockerHub
        uses: docker/build-push-action@v2
        if: github.event_name == 'release'
        with:
          push: true
          file: auto-setup.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta_release.outputs.tags }}
          labels: ${{ steps.meta_release.outputs.labels }}
          build-args: |
            GITHUB_SHA_SHORT=${{ $(echo $GITHUB_SHA | cut -c 1-8) }}
